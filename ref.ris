let iconCart = document.querySelector('.cart-icon');
let closeCart = document.querySelector('.close');
let body = document.querySelector('#toggle-open');
let listProductHTML = document.querySelector('.productList');
let listCartHTML = document.querySelector('.cartList');
let iconCartSpan = document.querySelector('.cart-icon span');

let productList = [];
let carts = [];

iconCart.addEventListener('click', () => {
    body.classList.toggle('showCart')
})
closeCart.addEventListener('click', () => {
    body.classList.toggle('showCart')
})

const addDataToHTML = () => {
    listProductHTML.innerHTML = '';
    if(productList.length > 0){
        productList.forEach( product => {
            let newProduct = document.createElement('div');
            newProduct.classList.add('food-item');
            newProduct.dataset.id = product.id;
            newProduct.innerHTML = `                        
            <img src="${product.image}" alt="">
                <h2>${product.name}</h2>
                <div class="item-price">₱${product.price}</div>
                <button class="add-cart">
                    Add To Cart
                </button>
                `;
                listProductHTML.appendChild(newProduct);
        })
    }
}
listProductHTML.addEventListener('click', (event) => {
    let positionClick = event.target;
    if(positionClick.classList.contains('add-cart')){
        let product_id = positionClick.parentElement.dataset.id;
        addToCart(product_id);
    }
})
const addToCart =(product_id) => {
    let positionThisProductInCart = carts.findIndex((value) => value.product_id == product_id);
    if(carts.length <= 0){
        carts = [{
            product_id: product_id,
            quantity: 1
        }]
    }else if(positionThisProductInCart < 0){
        carts.push ({
            product_id: product_id,
            quantity: 1
        });
    }else{
        carts [positionThisProductInCart].quantity = carts[positionThisProductInCart].quantity + 1;
    }
    addCartToHTML();
    addCartToMemory();
}

const addCartToMemory = () => {
    localStorage.setItem('cart', JSON.stringify(carts));
}
const addCartToHTML = () => {
    let totalQuantity = 0;
    listCartHTML.innerHTML = '';
    if(carts.length > 0){
        carts.forEach(cart => {
            totalQuantity = totalQuantity + cart.quantity;
            let newCart = document.createElement('div');
            newCart.classList.add('food-item');
            newCart.dataset.id = cart.product_id;
            let positionProduct = productList.findIndex((value) => value.id == cart.product_id);
            let info = productList[positionProduct];
            newCart.innerHTML = `<div class="cart-item">
                        <div class="item-image">
                            <img src="${info.image}" alt="">
                        </div>
                        <div class="cart-item-name">
                            ${info.name}
                        </div>
                        <div class="total-price">
                            ₱${info.price * cart.quantity}
                        </div>
                        <div class="quantity">
                            <span class="minus"><</span>
                            <span>${cart.quantity}</span>
                            <span class="plus">></span>
                        </div>
                    </div>
                    `;
        listCartHTML.appendChild(newCart);
        })
    }
    iconCartSpan.innerText = totalQuantity;
}

listCartHTML.addEventListener('click', (event) => {
    let positionClick = event.target;
    if(positionClick.classList.contains('minus') || positionClick.classList.contains('plus')){
        let product_id = positionClick.parentElement.parentElement.dataset.id;
        let type = 'minus';
        if (positionClick.classList.contains('plus')) {
            type = 'plus';
        }
        changeQuantity(product_id, type);
    }
});
const changeQuantity = (product_id, type) => {
    let positionItemInCart = carts.findIndex((value) => value.product_id == product_id);
    if(positionItemInCart >= 0){
        switch (type) {
            case 'plus':
                carts[positionItemInCart].quantity = carts[positionItemInCart].quantity + 1;
                break;
            default:
                let valueChange = carts[positionItemInCart].quantity - 1;
                if(valueChange > 0){
                    carts[positionItemInCart].quantity = valueChange;
                }else{
                    carts.splice(positionItemInCart, 1);
                }
                break;
        }
    }
    addCartToMemory();
    addCartToHTML();
}
const initApp = () => {
    fetch('products.json')
    .then(response => response.json())
    .then(data => {
        productList = data;
        addDataToHTML();
        //get from memory
        if(localStorage.getItem('cart')){
            carts = JSON.parse(localStorage.getItem('cart'));
            addCartToHTML();
        }
    })
}
initApp();


// Initialize Firebase
const app = initializeApp(firebaseConfig )
const analytics = getAnalytics(app);
const auth = getAuth(app);
const db = getFirestore(app);

//submit

const submit = document.getElementById('submit').value;
submit.addEventListener("click", function(event){
  event.preventDefault();

//inputs
const email = document.getElementById('email').value;
const password = document.getElementById('password').value;

  createUserWithEmailAndPassword(auth, email, password)
  .then(async (userCredential) => {
    // Signed up 
    const user = userCredential.user;

    await setDoc(doc(db, "users", user.uid), {
     email: email,
     password: password
    });

    alert("Creating Account..");
    window.location.href = "index.html";
    // ...
  })
  .catch((error) => {
    const errorCode = error.code;
    const errorMessage = error.message;
    alert("Failed To Create an Account...");
    // ..
  });

})


        <div class="cart-content">
            <div class="checkout-details">
                <h2>Billing Address</h2>
            <div class="cart-details">
                <input type="text" name="username" placeholder="First & Last Name" required>
                <i class='bx bxs-info-square'></i>
            </div>
            <div class="cart-details">
                <input type="text" name="username" placeholder="Email" required>
                <i class='bx bxs-envelope'></i>
            </div>
            <div class="cart-details">
                <input type="password" name="username" placeholder="Phone No." required>
                <i class='bx bxs-phone-call'></i>
            </div>
            <div class="cart-details">
                <input type="text" name="address" placeholder="Address" required>
                <i class='bx bxs-edit-location'></i>
            </div>
            <div class="cart-details">
                <input type="username" name="username" placeholder="City" required>
                <i class='bx bxs-city' ></i>
            </div>
            <div class="cart-details">
                <input type="text" name="username" placeholder="State" required>
                <i class='bx bxs-city' ></i>
            </div>
            
            <div class="cart-details">
                <input type="text" name="username" placeholder="Zip" required>
                <i class='bx bx-target-lock'></i>            
            </div>
            <button type="submit" class="order-btn" onclick="orderComplete()">Order</button>
            </div>
        </div>

        
.cart-content {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;  
}

.checkout-details {
    width: 420px;
    background: #373D2D;
    color: #353535;
    border-top-left-radius: 25px;
    border-top-right-radius: 25px;
    padding: 25px 35px 50px 35px;
    border: 2px solid rgb(16, 68, 33);
    backdrop-filter: blur(20px);
    box-shadow: 0 0 10px rgba(0, 0, 0, .2);
}

.checkout-details h2 {
    font-size: 2.2rem;
    text-align: center;
    color:#4d573f ;
}

.checkout-details .cart-details {
    position: relative;
    width: 100%;
    height: 50px;
    margin: 15px 0;
  }
  
.cart-details input  {
    width: 100%;
    height: 100%;
    background: #4d573f;
    border: none;
    outline: none;
    border: 2px solid rgba(255, 255, 255, .2);
    border-radius: 45px;
    font-size: 18px;
    color: var(--base-color);
    padding: 20px 45px 20px 20px;
  }
  
.cart-details input::placeholder {
    color: #fffcfc;
  }
  
.cart-details i {
    position: absolute;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 20px;
    color: #373D2D;
  }

.checkout-details .order-btn {
    width: 100%;
    height: 50px;
    background: var(--base-color);
    border: none;
    outline: none;
    border-radius: 50px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, .2);
    font-size: 18px;
    color: var(--hover-color);
    cursor: pointer; 
    transition: .2s ease;
  
    &:hover {
      background-color: #7f8d68;
    }
}
  